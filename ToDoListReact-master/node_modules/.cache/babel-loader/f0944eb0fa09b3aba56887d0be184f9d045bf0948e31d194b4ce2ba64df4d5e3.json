{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u05D0\\u05D1\\u05D9\\u05D2\\u05D9\\u05DC\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E9\\u05E0\\u05D4 \\u05D1\\\\\\u05E4\\u05E8\\u05D8\\u05D9\\u05E7\\u05D5\\u05D3\\\\pro3\\\\TodoApi\\\\ToDoListReact-master\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import service from './service.js';\n\n// function App() {\n//   const [newTodo, setNewTodo] = useState(\"\");\n//   const [todos, setTodos] = useState([]);\n\n//   async function getTodos() {\n//     const todos = await service.getTasks();\n//     setTodos(todos);\n//   }\n\n//   async function createTodo(e) {\n//     e.preventDefault();\n//     if(!newTodo.trim()) return;\n//     try{\n//       await service.addTask(newTodo);\n//       setNewTodo(\"\");\n//       await getTodos();\n//     }\n//     catch(error)\n//     {\n//       console.error(\"Error adding task: \",error);\n//     }\n//   }\n\n//   async function updateCompleted(todo, isComplete) {\n//     await service.setCompleted(todo.id, isComplete);\n//     await getTodos();//refresh tasks list (in order to see the updated one)\n//   }\n\n//   async function deleteTodo(id) {\n\n//     await service.deleteTask(id);\n//     await getTodos();//refresh tasks list\n//   }\n\n//   useEffect(() => {\n//     getTodos();\n//   }, []);\n\n//   return (\n//     <section className=\"todoapp\">\n//       <header className=\"header\">\n//         <h1>todos</h1>\n//         <form onSubmit={createTodo}>\n//           <input className=\"new-todo\" placeholder=\"Well, let's take on the day\" value={newTodo} onChange={(e) => setNewTodo(e.target.value)} />\n//         </form>\n//       </header>\n//       <section className=\"main\" style={{ display: \"block\" }}>\n//         <ul className=\"todo-list\">\n//           {todos.map(todo => {\n//             return (\n//               <li className={todo.isComplete ? \"completed\" : \"\"} key={todo.id}>\n//                 <div className=\"view\">\n//                   <input className=\"toggle\" type=\"checkbox\" defaultChecked={todo.isComplete} onChange={(e) => updateCompleted(todo, e.target.checked)} />\n//                   <label>{todo.name}</label>\n//                   <button className=\"destroy\" onClick={() => deleteTodo(todo.id)}></button>\n//                 </div>\n//               </li>\n//             );\n//           })}\n//         </ul>\n//       </section>\n//     </section >\n//   );\n// }\n\n// export default App;\n\nimport React, { useEffect, useState } from 'react';\nimport service from './service.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  async function getTodos() {\n    try {\n      const todos = await service.getTasks();\n      setTodos(todos);\n    } catch (error) {\n      console.error(\"Error fetching tasks: \", error);\n    }\n  }\n  async function createTodo(e) {\n    e.preventDefault();\n    if (!newTodo.trim()) return;\n    try {\n      await service.addTask(newTodo);\n      setNewTodo(\"\");\n      await getTodos();\n    } catch (error) {\n      console.error(\"Error adding task: \", error);\n    }\n  }\n  async function updateCompleted(todo, isComplete) {\n    try {\n      await service.setCompleted(todo.id, isComplete);\n      await getTodos();\n    } catch (error) {\n      console.error(\"Error updating task: \", error);\n    }\n  }\n  async function deleteTodo(id) {\n    try {\n      await service.deleteTask(id);\n      await getTodos();\n    } catch (error) {\n      console.error(\"Error deleting task: \", error);\n    }\n  }\n  useEffect(() => {\n    getTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"todoapp\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: createTodo,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"new-todo\",\n          placeholder: \"Well, let's take on the day\",\n          value: newTodo,\n          onChange: e => setNewTodo(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main\",\n      style: {\n        display: \"block\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"todo-list\",\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: todo.isComplete ? \"completed\" : \"\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"view\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"toggle\",\n              type: \"checkbox\",\n              checked: todo.isComplete,\n              onChange: e => updateCompleted(todo, e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: todo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"destroy\",\n              onClick: () => deleteTodo(todo.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GJV7m7gNoZmXOQ49S2kx79/RCYY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","service","jsxDEV","_jsxDEV","App","_s","newTodo","setNewTodo","todos","setTodos","getTodos","getTasks","error","console","createTodo","e","preventDefault","trim","addTask","updateCompleted","todo","isComplete","setCompleted","id","deleteTodo","deleteTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","style","display","map","type","checked","name","onClick","_c","$RefreshReg$"],"sources":["C:/אביגיל/לימודים/שנה ב/פרטיקוד/pro3/TodoApi/ToDoListReact-master/src/App.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import service from './service.js';\n\n// function App() {\n//   const [newTodo, setNewTodo] = useState(\"\");\n//   const [todos, setTodos] = useState([]);\n\n//   async function getTodos() {\n//     const todos = await service.getTasks();\n//     setTodos(todos);\n//   }\n\n//   async function createTodo(e) {\n//     e.preventDefault();\n//     if(!newTodo.trim()) return;\n//     try{\n//       await service.addTask(newTodo);\n//       setNewTodo(\"\");\n//       await getTodos();\n//     }\n//     catch(error)\n//     {\n//       console.error(\"Error adding task: \",error);\n//     }\n//   }\n\n//   async function updateCompleted(todo, isComplete) {\n//     await service.setCompleted(todo.id, isComplete);\n//     await getTodos();//refresh tasks list (in order to see the updated one)\n//   }\n\n//   async function deleteTodo(id) {\n    \n//     await service.deleteTask(id);\n//     await getTodos();//refresh tasks list\n//   }\n\n//   useEffect(() => {\n//     getTodos();\n//   }, []);\n\n//   return (\n//     <section className=\"todoapp\">\n//       <header className=\"header\">\n//         <h1>todos</h1>\n//         <form onSubmit={createTodo}>\n//           <input className=\"new-todo\" placeholder=\"Well, let's take on the day\" value={newTodo} onChange={(e) => setNewTodo(e.target.value)} />\n//         </form>\n//       </header>\n//       <section className=\"main\" style={{ display: \"block\" }}>\n//         <ul className=\"todo-list\">\n//           {todos.map(todo => {\n//             return (\n//               <li className={todo.isComplete ? \"completed\" : \"\"} key={todo.id}>\n//                 <div className=\"view\">\n//                   <input className=\"toggle\" type=\"checkbox\" defaultChecked={todo.isComplete} onChange={(e) => updateCompleted(todo, e.target.checked)} />\n//                   <label>{todo.name}</label>\n//                   <button className=\"destroy\" onClick={() => deleteTodo(todo.id)}></button>\n//                 </div>\n//               </li>\n//             );\n//           })}\n//         </ul>\n//       </section>\n//     </section >\n//   );\n// }\n\n// export default App;\n\nimport React, { useEffect, useState } from 'react';\nimport service from './service.js';\n\nfunction App() {\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  async function getTodos() {\n    try {\n      const todos = await service.getTasks();\n      setTodos(todos);\n    } catch (error) {\n      console.error(\"Error fetching tasks: \", error);\n    }\n  }\n\n  async function createTodo(e) {\n    e.preventDefault();\n    if (!newTodo.trim()) return;\n    try {\n      await service.addTask(newTodo);\n      setNewTodo(\"\");\n      await getTodos();\n    } catch (error) {\n      console.error(\"Error adding task: \", error);\n    }\n  }\n\n  async function updateCompleted(todo, isComplete) {\n    try {\n      await service.setCompleted(todo.id, isComplete);\n      await getTodos();\n    } catch (error) {\n      console.error(\"Error updating task: \", error);\n    }\n  }\n\n  async function deleteTodo(id) {\n    try {\n      await service.deleteTask(id);\n      await getTodos();\n    } catch (error) {\n      console.error(\"Error deleting task: \", error);\n    }\n  }\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={createTodo}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"Well, let's take on the day\"\n            value={newTodo}\n            onChange={(e) => setNewTodo(e.target.value)}\n          />\n        </form>\n      </header>\n      <section className=\"main\" style={{ display: \"block\" }}>\n        <ul className=\"todo-list\">\n          {todos.map((todo) => (\n            <li className={todo.isComplete ? \"completed\" : \"\"} key={todo.id}>\n              <div className=\"view\">\n                <input\n                  className=\"toggle\"\n                  type=\"checkbox\"\n                  checked={todo.isComplete}\n                  onChange={(e) => updateCompleted(todo, e.target.checked)}\n                />\n                <label>{todo.name}</label>\n                <button className=\"destroy\" onClick={() => deleteTodo(todo.id)}></button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </section>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}